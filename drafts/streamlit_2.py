import streamlit as st
import pandas as pd
import os

# –ó–∞–≥–æ–ª–æ–≤–æ–∫ –ø—Ä–∏–ª–æ–∂–µ–Ω–∏—è
st.title("üöÄ AutoML")

# 1Ô∏è‚É£ üìÇ **–ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞—Ç–∞—Å–µ—Ç–∞**
uploaded_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ CSV –∏–ª–∏ Excel-—Ñ–∞–π–ª —Å –¥–∞–Ω–Ω—ã–º–∏", type=["csv", "xlsx"])
if uploaded_file:
    # –û–ø—Ä–µ–¥–µ–ª—è–µ–º —Ñ–æ—Ä–º–∞—Ç —Ñ–∞–π–ª–∞ –∏ —á–∏—Ç–∞–µ–º –µ–≥–æ
    file_extension = os.path.splitext(uploaded_file.name)[-1]
    if file_extension == ".csv":
        data = pd.read_csv(uploaded_file)
    else:
        data = pd.read_excel(uploaded_file)

    st.write("üìä **–ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–π –¥–∞—Ç–∞—Å–µ—Ç (–ø–µ—Ä–≤—ã–µ 5 —Å—Ç—Ä–æ–∫):**")
    st.dataframe(data.head())

    # 2Ô∏è‚É£ **–í—ã–±–æ—Ä —Ç–∏–ø–∞ ML-–∑–∞–¥–∞—á–∏**
    task_type = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Ç–∏–ø –∑–∞–¥–∞—á–∏", ["–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è", "–í—Ä–µ–º–µ–Ω–Ω–æ–π —Ä—è–¥", "–†–µ–≥—Ä–µ—Å—Å–∏—è"])

    # 3Ô∏è‚É£ **–í—ã–±–æ—Ä —Ü–µ–ª–µ–≤–æ–π –ø–µ—Ä–µ–º–µ–Ω–Ω–æ–π**
    target_column = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ —Ü–µ–ª–µ–≤—É—é –ø–µ—Ä–µ–º–µ–Ω–Ω—É—é", data.columns)

    # 4Ô∏è‚É£ **–í—ã–±–æ—Ä –º–µ—Ç—Ä–∏–∫ –¥–ª—è —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –º–æ–¥–µ–ª–µ–π**
    default_metrics = ["Accuracy", "AUC", "F1", "Precision", "Recall"] if task_type == "–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è" else ["RMSE",
                                                                                                             "MAE",
                                                                                                             "R2"]
    selected_metrics = st.multiselect("–í—ã–±–µ—Ä–∏—Ç–µ –º–µ—Ç—Ä–∏–∫–∏", default_metrics, default=default_metrics)

    # 5Ô∏è‚É£ **–î–æ–ø–æ–ª–Ω–∏—Ç–µ–ª—å–Ω—ã–µ –Ω–∞—Å—Ç—Ä–æ–π–∫–∏**
    experiment_name = st.text_input("–í–≤–µ–¥–∏—Ç–µ –Ω–∞–∑–≤–∞–Ω–∏–µ —ç–∫—Å–ø–µ—Ä–∏–º–µ–Ω—Ç–∞ (–ø–æ –∂–µ–ª–∞–Ω–∏—é)", "AutoML_Exp")
    session_id = st.number_input("–í–≤–µ–¥–∏—Ç–µ —Å–ª—É—á–∞–π–Ω—ã–π seed (–¥–ª—è –≤–æ—Å–ø—Ä–æ–∏–∑–≤–æ–¥–∏–º–æ—Å—Ç–∏)", value=123, min_value=1, step=1)

    # 6Ô∏è‚É£ üìÑ **–ó–∞–≥—Ä—É–∑–∫–∞ —Ñ–∞–π–ª–∞ —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –º–æ–¥–µ–ª–µ–π (–ø–æ –∂–µ–ª–∞–Ω–∏—é)**
    models_file = st.file_uploader("–ó–∞–≥—Ä—É–∑–∏—Ç–µ —Ñ–∞–π–ª —Å –æ–ø–∏—Å–∞–Ω–∏–µ–º –º–æ–¥–µ–ª–µ–π (CSV, XLSX)", type=["csv", "xlsx"])
    if models_file:
        models_extension = os.path.splitext(models_file.name)[-1]
        if models_extension == ".csv":
            models_info = pd.read_csv(models_file)
        else:
            models_info = pd.read_excel(models_file)

        st.write("üìå **–ó–∞–≥—Ä—É–∂–µ–Ω–Ω—ã–µ –æ–ø–∏—Å–∞–Ω–∏—è –º–æ–¥–µ–ª–µ–π:**")
        st.dataframe(models_info)

    # 7Ô∏è‚É£ üöÄ **–ó–∞–ø—É—Å–∫ AutoML**
    if st.button("‚ñ∂ –ó–∞–ø—É—Å—Ç–∏—Ç—å AutoML"):
        st.write("‚è≥ **–ò–Ω–∏—Ü–∏–∞–ª–∏–∑–∞—Ü–∏—è —Å–∏—Å—Ç–µ–º—É...**")

        # 8Ô∏è‚É£ **–û—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Ä–µ–∑—É–ª—å—Ç–∞—Ç–æ–≤**
        st.write("üéØ **–õ—É—á—à–∏–µ –º–æ–¥–µ–ª–∏:**")

