import pandas as pd
from sklearn.model_selection import train_test_split
from sklearn.feature_extraction.text import TfidfVectorizer
from sklearn.linear_model import LogisticRegression
from sklearn.pipeline import Pipeline
from sklearn.metrics import accuracy_score, f1_score, classification_report, recall_score, precision_score
import joblib
from nltk.corpus import stopwords
import nltk
nltk.download("stopwords")

russian_stopwords = stopwords.words("russian")

RUSSIAN_STOP_WORDS = [
    "–∏", "–≤", "–≤–æ", "–Ω–µ", "—á—Ç–æ", "–æ–Ω", "–Ω–∞", "—è", "—Å", "—Å–æ", "–∫–∞–∫", "–∞", "—Ç–æ", "–≤—Å–µ",
    "–æ–Ω–∞", "—Ç–∞–∫", "–µ–≥–æ", "–Ω–æ", "–¥–∞", "—Ç—ã", "–∫", "—É", "–∂–µ", "–≤—ã", "–∑–∞", "–±—ã", "–ø–æ", "—Ç–æ–ª—å–∫–æ", "–µ–µ",
    "–º–Ω–µ", "–±—ã–ª–æ", "–≤–æ—Ç", "–æ—Ç", "–º–µ–Ω—è", "–µ—â–µ", "–Ω–µ—Ç", "–æ", "–∏–∑", "–µ–º—É", "—Ç–µ–ø–µ—Ä—å", "–∫–æ–≥–¥–∞", "–¥–∞–∂–µ",
    "–Ω—É", "–≤–¥—Ä—É–≥", "–ª–∏", "–µ—Å–ª–∏", "—É–∂–µ", "–∏–ª–∏", "–Ω–∏", "–±—ã—Ç—å", "–±—ã–ª", "–Ω–µ–≥–æ", "–¥–æ", "–≤–∞—Å", "–Ω–∏–±—É–¥—å"
]

# --- 1. –ó–∞–≥—Ä—É–∑–∫–∞ –¥–∞—Ç–∞—Å–µ—Ç–∞ ---
df = pd.read_csv("crypto_news_total.csv")  # —Ñ–∞–π–ª —Å –∫–æ–ª–æ–Ω–∫–∞–º–∏ text, is_crypto
df.dropna(subset=["text", "is_crypto"], inplace=True)

# --- 2. –†–∞–∑–¥–µ–ª–µ–Ω–∏–µ –Ω–∞ train/test ---
X_train, X_test, y_train, y_test = train_test_split(
    df["text"], df["is_crypto"], test_size=0.2, random_state=42
)

# --- 3. NLP-–ø–∞–π–ø–ª–∞–π–Ω ---
model = Pipeline([
    ("tfidf", TfidfVectorizer(
        max_features=5000,
        stop_words=russian_stopwords,  # –º–æ–∂–Ω–æ –∑–∞–º–µ–Ω–∏—Ç—å –Ω–∞ "russian" –¥–ª—è —Ä—É—Å—Å–∫–æ–≥–æ
        ngram_range=(1, 2)
    )),
    ("clf", LogisticRegression(max_iter=1000))
])

# --- 4. –û–±—É—á–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ ---
model.fit(X_train, y_train)

# --- 5. –û—Ü–µ–Ω–∫–∞ –∫–∞—á–µ—Å—Ç–≤–∞ ---
y_pred = model.predict(X_test)
print("Accuracy:", accuracy_score(y_test, y_pred))
print("Precision:", precision_score(y_test, y_pred))
print("Recall:", recall_score(y_test, y_pred))
print("F1 Score:", f1_score(y_test, y_pred))
print("\nClassification Report:\n", classification_report(y_test, y_pred))

# --- 6. –°–æ—Ö—Ä–∞–Ω–µ–Ω–∏–µ –º–æ–¥–µ–ª–∏ (–æ–ø—Ü–∏–æ–Ω–∞–ª—å–Ω–æ) ---
joblib.dump(model, "crypto_classifier_model.pkl")

# --- 7. –ü—Ä–∏–º–µ—Ä –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏—è ---
example = ["Binance launches new staking service for Ethereum users"]
print("–ü—Ä–∏–º–µ—Ä:", model.predict(example)[0])

ex_1 = ["""–∞–∑—Ä–∞–±–æ—Ç—á–∏–∫ –±–ª–æ–∫—á–µ–π–Ω–∞ –ö–∞—Ä—Ç–∏–∫ –ü–∞—Ç–µ–ª—å –ø—Ä–µ–¥—Å—Ç–∞–≤–∏–ª Anon World, —Å–æ—Ü–∏–∞–ª—å–Ω—É—é –ø–ª–∞—Ç—Ñ–æ—Ä–º—É, –æ—Å–Ω–æ–≤–∞–Ω–Ω—É—é –Ω–∞ –ø—Ä–æ—Ç–æ–∫–æ–ª–µ Farcaster, –∫–æ—Ç–æ—Ä–∞—è –≥–∞—Ä–∞–Ω—Ç–∏—Ä—É–µ—Ç –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç—å –∏ –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π. –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ –ø—Ä–µ–¥–ª–∞–≥–∞–µ—Ç –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å –≤ —Å—Ç–∏–ª–µ Reddit, —Å–ø–æ—Å–æ–±—Å—Ç–≤—É—é—â–∏–π —É–¥–æ–±–Ω–æ–º—É –æ–±—â–µ–Ω–∏—é –∏ –∑–∞—â–∏—Ç–µ –¥–∞–Ω–Ω—ã—Ö.

üîí –î–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–æ–≤–∞–Ω–Ω—ã–π Farcaster –≤ –æ—Å–Ω–æ–≤–µ –±–µ–∑–æ–ø–∞—Å–Ω–æ—Å—Ç–∏  
Farcaster ‚Äî —ç—Ç–æ –ø—Ä–æ—Ç–æ–∫–æ–ª, –æ–±–µ—Å–ø–µ—á–∏–≤–∞—é—â–∏–π:  
- –î–µ—Ü–µ–Ω—Ç—Ä–∞–ª–∏–∑–∞—Ü–∏—é –¥–∞–Ω–Ω—ã—Ö, –∏—Å–∫–ª—é—á–∞—é—â—É—é –∫–æ–Ω—Ç—Ä–æ–ª—å –æ–¥–Ω–æ–π –∫–æ–º–ø–∞–Ω–∏–∏.  
- –ó–∞—â–∏—Ç—É –æ—Ç –≤–∑–ª–æ–º–æ–≤ –∏ –º–∞–Ω–∏–ø—É–ª—è—Ü–∏–π —á–µ—Ä–µ–∑ —Ä–∞—Å–ø—Ä–µ–¥–µ–ª–µ–Ω–Ω–æ–µ —Ö—Ä–∞–Ω–µ–Ω–∏–µ.  
- –û—Ç—Å—É—Ç—Å—Ç–≤–∏–µ —Ü–µ–Ω–∑—É—Ä—ã –∏ –≤–Ω–µ—à–Ω–µ–≥–æ –∫–æ–Ω—Ç—Ä–æ–ª—è –Ω–∞–¥ –∫–æ–Ω—Ç–µ–Ω—Ç–æ–º.  

‚ú® AnonCast: –æ—Ç –ø–æ–¥–∫–∞—Å—Ç–∞ –∫ —Å–æ—Ü–∏–∞–ª—å–Ω–æ–π –ø–ª–∞—Ç—Ñ–æ—Ä–º–µ  
–ó–∞–ø—É—Å–∫ Anon World —Å—Ç–∞–ª —Å–ª–µ–¥—É—é—â–∏–º —à–∞–≥–æ–º –≤ —Ä–∞–∑–≤–∏—Ç–∏–∏ –ø—Ä–æ–µ–∫—Ç–∞ AnonCast, –∏–∑–≤–µ—Å—Ç–Ω–æ–≥–æ —Å–≤–æ–µ–π –ø—Ä–∏–≤–µ—Ä–∂–µ–Ω–Ω–æ—Å—Ç—å—é –∞–Ω–æ–Ω–∏–º–Ω–æ—Å—Ç–∏ –∏ —Å–≤–æ–±–æ–¥–µ —Å–ª–æ–≤–∞. –ü–ª–∞—Ç—Ñ–æ—Ä–º–∞ —Å—Ç–∞–Ω–µ—Ç —É–±–µ–∂–∏—â–µ–º –¥–ª—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª–µ–π, —Ü–µ–Ω—è—â–∏—Ö —Å–≤–æ—é –ø—Ä–∏–≤–∞—Ç–Ω–æ—Å—Ç—å.
"""]

ex_2 = ["""–ö—Ä–µ–º–ª—å –Ω–∞–¥–µ–µ—Ç—Å—è –∑–∞–≤–µ—Ä—à–∏—Ç—å –ø–µ—Ä–µ–≥–æ–≤–æ—Ä—ã –ø–æ –£–∫—Ä–∞–∏–Ω–µ –¥–æ 9 –º–∞—è, –∫–æ–≥–¥–∞ –±—É–¥–µ—Ç –æ—Ç–º–µ—á–∞—Ç—å—Å—è 80-—è –≥–æ–¥–æ–≤—â–∏–Ω–∞ –ø–æ–±–µ–¥—ã –°–æ–≤–µ—Ç—Å–∫–æ–≥–æ –°–æ—é–∑–∞ –Ω–∞–¥ –Ω–∞—Ü–∏—Å—Ç—Å–∫–æ–π –ì–µ—Ä–º–∞–Ω–∏–µ–π. –¶–µ–ª—å ‚Äî —É—Å—Ç—Ä–æ–∏—Ç—å –¥–≤–æ–π–Ω–æ–π –ø—Ä–∞–∑–¥–Ω–∏–∫, ‚Äî –∫–æ—Ä—Ä–µ—Å–ø–æ–Ω–¥–µ–Ω—Ç Sky News –≤ –†–æ—Å—Å–∏–∏"""]

print("–ü—Ä–∏–º–µ—Ä 1:", model.predict(ex_1)[0])
print("–ü—Ä–∏–º–µ—Ä 2:", model.predict(ex_2)[0])