import pandas as pd
from transformers import pipeline
from tqdm import tqdm
import torch

# --- –ù–∞—Å—Ç—Ä–æ–π–∫–∏ ---
BATCH_SIZE = 16
TEXT_TRUNCATE_CHARS = 512
KEYWORDS = ["bitcoin", "crypto", "blockchain", "ethereum", "BTC", "altcoin"]

# –ë–æ–ª–µ–µ –ª—ë–≥–∫–∞—è –∏ –±—ã—Å—Ç—Ä–∞—è zero-shot –º–æ–¥–µ–ª—å
classifier = pipeline(
    "zero-shot-classification",
    model="facebook/bart-large-mnli",
    tokenizer="facebook/bart-large-mnli",
    use_fast=False,  # ‚¨ÖÔ∏è –û–¢–ö–õ–Æ–ß–ê–ï–ú Fast Tokenizer
    device=0 if torch.cuda.is_available() else -1
)

candidate_labels = ["cryptocurrency", "finance", "politics", "technology"]


# --- –§—É–Ω–∫—Ü–∏–∏ ---

def contains_crypto_keywords(text):
    text_lower = text.lower()
    return any(keyword in text_lower for keyword in KEYWORDS)


def classify_batch(texts):
    # –æ–±—Ä–µ–∑–∞–µ–º –∏ —Ñ–∏–ª—å—Ç—Ä—É–µ–º –ø—É—Å—Ç—ã–µ
    inputs = [t[:TEXT_TRUNCATE_CHARS] for t in texts]
    results = classifier(inputs, candidate_labels, truncation=True)

    # pipeline –≤–æ–∑–≤—Ä–∞—â–∞–µ—Ç –ª–∏–±–æ dict, –ª–∏–±–æ list[dict] ‚Äî –Ω–∞–¥–æ –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –æ–±–∞ –≤–∞—Ä–∏–∞–Ω—Ç–∞
    if isinstance(results, dict):
        results = [results]

    return [res['labels'][0] == 'cryptocurrency' for res in results]


def filter_crypto_news(csv_file_path):
    df = pd.read_csv(csv_file_path)

    if 'title' not in df.columns or 'text' not in df.columns:
        raise ValueError("CSV –¥–æ–ª–∂–µ–Ω —Å–æ–¥–µ—Ä–∂–∞—Ç—å –∫–æ–ª–æ–Ω–∫–∏ 'title' –∏ 'text'.")

    tqdm.pandas(desc="–§–∏–ª—å—Ç—Ä–∞—Ü–∏—è –ø–æ –∫–ª—é—á–µ–≤—ã–º —Å–ª–æ–≤–∞–º")
    df['keyword_match'] = df.progress_apply(
        lambda row: contains_crypto_keywords(str(row['title']) + " " + str(row['text'])),
        axis=1
    )

    df = df[df['keyword_match']].reset_index(drop=True)

    all_texts = (df['title'] + " " + df['text']).tolist()
    is_crypto_flags = []

    print("–ó–∞–ø—É—Å–∫ zero-shot –∫–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏–∏...")

    for i in tqdm(range(0, len(all_texts), BATCH_SIZE), desc="–ö–ª–∞—Å—Å–∏—Ñ–∏–∫–∞—Ü–∏—è"):
        batch = all_texts[i:i + BATCH_SIZE]
        batch_result = classify_batch(batch)
        is_crypto_flags.extend(batch_result)

    df = df.iloc[:len(is_crypto_flags)]
    df['is_crypto'] = is_crypto_flags

    return df[df['is_crypto']][['title', 'text']]


# --- –û—Å–Ω–æ–≤–Ω–æ–π –±–ª–æ–∫ ---

if __name__ == "__main__":
    import torch
    import time

    time_start = time.time()
    path_to_csv = "crypnews247.csv"

    crypto_news_df = filter_crypto_news(path_to_csv)

    print(f"\n‚è±Ô∏è –í—ã–ø–æ–ª–Ω–µ–Ω–æ –∑–∞ {round(time.time() - time_start, 2)} —Å–µ–∫.")
    print(f"üì∞ –ù–∞–π–¥–µ–Ω–æ –∫—Ä–∏–ø—Ç–æ-–Ω–æ–≤–æ—Å—Ç–µ–π: {len(crypto_news_df)}")
    print(crypto_news_df.head())

    crypto_news_df.to_csv("crypto_news_semantic.csv", index=False, encoding="utf-8")
