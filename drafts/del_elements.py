import os
import pandas as pd

# –ü–∞–ø–∫–∞ —Å CSV-—Ñ–∞–π–ª–∞–º–∏ (—É–∫–∞–∂–∏ –ø—É—Ç—å –∫ —Å–≤–æ–µ–π)
folder_path = 'datasets'  # –Ω–∞–ø—Ä–∏–º–µ—Ä, './data' –∏–ª–∏ '.' –¥–ª—è —Ç–µ–∫—É—â–µ–π –¥–∏—Ä–µ–∫—Ç–æ—Ä–∏–∏

# –ò–º—è —Å—Ç–æ–ª–±—Ü–∞ —Å —Ü–µ–ª–µ–≤—ã–º–∏ –º–µ—Ç–∫–∞–º–∏ (–º–æ–∂–Ω–æ –∏–∑–º–µ–Ω–∏—Ç—å, –µ—Å–ª–∏ –æ—Ç–ª–∏—á–∞–µ—Ç—Å—è)
target_column = 'target'

# –ú–∞–∫—Å–∏–º—É–º —ç–ª–µ–º–µ–Ω—Ç–æ–≤ –Ω–∞ –∫–ª–∞—Å—Å
max_per_class = 20000

# –û–±—Ä–∞–±–∞—Ç—ã–≤–∞–µ–º –≤—Å–µ —Ñ–∞–π–ª—ã —Å —Ä–∞—Å—à–∏—Ä–µ–Ω–∏–µ–º .csv
for filename in os.listdir(folder_path):
    if filename.endswith('.csv'):
        file_path = os.path.join(folder_path, filename)
        print(f"üîç –û–±—Ä–∞–±–æ—Ç–∫–∞ —Ñ–∞–π–ª–∞: {filename}")

        # –ó–∞–≥—Ä—É–∂–∞–µ–º CSV
        df = pd.read_csv(file_path)
        class_counts = df[target_column].value_counts()

        # –ü—Ä–æ–≤–µ—Ä—è–µ–º –Ω–∞–ª–∏—á–∏–µ –Ω—É–∂–Ω–æ–≥–æ —Å—Ç–æ–ª–±—Ü–∞
        if target_column not in df.columns:
            print(f"‚ö† –ü—Ä–æ–ø—É—â–µ–Ω–æ: –ù–µ—Ç —Å—Ç–æ–ª–±—Ü–∞ '{target_column}'")
            continue

        # –ü—Ä–æ–≤–µ—Ä–∏–º, —á—Ç–æ –≤—Å–µ –∑–Ω–∞—á–µ–Ω–∏—è ‚Äî –∏–∑ –Ω—É–∂–Ω—ã—Ö –∫–ª–∞—Å—Å–æ–≤
        unique_classes = set(df[target_column].unique())
        expected_classes = {1, 0, 2}

        if not unique_classes.issubset(expected_classes):
            print(f"‚ö† –ü—Ä–æ–ø—É—â–µ–Ω–æ: –ù–∞–π–¥–µ–Ω—ã –Ω–µ–æ–∂–∏–¥–∞–Ω–Ω—ã–µ –∑–Ω–∞—á–µ–Ω–∏—è –∫–ª–∞—Å—Å–æ–≤ ‚Äî {unique_classes}")
            continue

        # –û–±—Ä–µ–∑–∞–µ–º –∫–∞–∂–¥—ã–π –∫–ª–∞—Å—Å –¥–æ 1000 —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (–µ—Å–ª–∏ –Ω—É–∂–Ω–æ)
        balanced_dfs = []
        for cls in sorted(expected_classes):
            cls_df = df[df[target_column] == cls]
            if len(cls_df) > max_per_class:
                cls_df = cls_df.sample(n=max_per_class, random_state=42)
            balanced_dfs.append(cls_df)

        # –°–æ–±–∏—Ä–∞–µ–º —Å–±–∞–ª–∞–Ω—Å–∏—Ä–æ–≤–∞–Ω–Ω—ã–π –¥–∞—Ç–∞—Å–µ—Ç
        balanced_df = pd.concat(balanced_dfs).sample(frac=1, random_state=42)  # –ø–µ—Ä–µ–º–µ—à–∏–≤–∞–µ–º
        class_counts = balanced_df[target_column].value_counts()

        # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—Ä–∞—Ç–Ω–æ –≤ —Ç–æ—Ç –∂–µ —Ñ–∞–π–ª
        balanced_df.to_csv(file_path, index=False)
        print(f"‚úÖ –°–æ—Ö—Ä–∞–Ω–µ–Ω–æ: {filename} (—Ä–∞–∑–º–µ—Ä: {len(balanced_df)} —Å—Ç—Ä–æ–∫)\n")
