import streamlit as st
import pandas as pd
import numpy as np
from datetime import datetime, timedelta
import random

# === –ò–ú–ò–¢–ê–¶–ò–Ø –§–£–ù–ö–¶–ò–ò –ü–û–õ–£–ß–ï–ù–ò–Ø –°–ò–ì–ù–ê–õ–û–í ===
def get_signals(crypto: str, model: str):
    now = datetime.now()
    signals = []
    for i in range(10):
        signal_time = now - timedelta(minutes=random.randint(1, 2880))  # –¥–æ 2 —Å—É—Ç–æ–∫ –Ω–∞–∑–∞–¥
        signal_price = round(random.uniform(1000, 3000), 2)
        current_price = signal_price + round(random.uniform(-50, 50), 2)
        delta = current_price - signal_price

        duration = now - signal_time
        hours = duration.total_seconds() / 3600

        if hours < 1:
            signal_type = "–ö–æ—Ä–æ—Ç–∫–∞—è"
        elif hours < 12:
            signal_type = "–°—Ä–µ–¥–Ω—è—è"
        else:
            signal_type = "–î–ª–∏—Ç–µ–ª—å–Ω–∞—è"

        signals.append({
            "–í—Ä–µ–º—è —Å–∏–≥–Ω–∞–ª–∞": signal_time.strftime("%Y-%m-%d %H:%M"),
            "–¢–∏–ø —Å–∏–≥–Ω–∞–ª–∞": signal_type,
            "–¶–µ–Ω–∞ –Ω–∞ –º–æ–º–µ–Ω—Ç —Å–∏–≥–Ω–∞–ª–∞": signal_price,
            "–¢–µ–∫—É—â–∞—è —Ü–µ–Ω–∞": current_price,
            "–†–∞–∑–Ω–∏—Ü–∞": delta
        })
    return pd.DataFrame(signals)

# === –ù–ê–°–¢–†–û–ô–ö–ê STREAMLIT ===
st.set_page_config(page_title="–°–∏–≥–Ω–∞–ª—ã –ø–æ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç–∞–º", layout="wide")
st.title("üì° –°–∏–≥–Ω–∞–ª—ã –¥–ª—è —Ç—Ä–µ–π–¥–∏–Ω–≥–∞ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç")

# --- –í—ã–±–æ—Ä –ø–∞—Ä–∞–º–µ—Ç—Ä–æ–≤ ---
cryptos = ["Bitcoin", "Ethereum", "Solana", "BNB"]
models = ["Strategy A", "Strategy B", "Strategy C"]

col1, col2 = st.columns(2)
with col1:
    selected_crypto = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –∫—Ä–∏–ø—Ç–æ–≤–∞–ª—é—Ç—É", cryptos)
with col2:
    selected_model = st.selectbox("–í—ã–±–µ—Ä–∏—Ç–µ –º–æ–¥–µ–ª—å", models)

# --- –ü–æ–ª—É—á–µ–Ω–∏–µ –∏ –æ—Ç–æ–±—Ä–∞–∂–µ–Ω–∏–µ —Å–∏–≥–Ω–∞–ª–æ–≤ ---
st.subheader(f"üìã –°–∏–≥–Ω–∞–ª—ã –ø–æ {selected_crypto} —Å –º–æ–¥–µ–ª—å—é {selected_model}")
df = get_signals(selected_crypto, selected_model)

# --- –û–¶–í–ï–¢–ö–ê ---
def highlight_signal(row):
    if row["–†–∞–∑–Ω–∏—Ü–∞"] > 0:
        return [''] * 4 + ['background-color: green; color: white']
    elif row["–†–∞–∑–Ω–∏—Ü–∞"] < 0:
        return [''] * 4 + ['background-color: red; color: white']
    else:
        return [''] * 4 + ['background-color: white; color: black']

styled_df = df.style.apply(highlight_signal, axis=1)

st.dataframe(styled_df, use_container_width=True)
