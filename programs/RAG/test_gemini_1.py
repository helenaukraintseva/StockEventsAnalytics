import os
import logging
import google.generativeai as genai
from dotenv import load_dotenv

load_dotenv()
logging.basicConfig(level=logging.INFO, format="%(asctime)s [%(levelname)s] %(message)s")

GEMINI_API = os.getenv("GEMINI_API_KEY")

def list_gemini_models(api_key: str):
    """
    –ü–æ–ª—É—á–∞–µ—Ç —Å–ø–∏—Å–æ–∫ –¥–æ—Å—Ç—É–ø–Ω—ã—Ö –º–æ–¥–µ–ª–µ–π Gemini API.

    :param api_key: API –∫–ª—é—á Google Generative AI
    :return: –°–ø–∏—Å–æ–∫ –∏–º—ë–Ω –º–æ–¥–µ–ª–µ–π
    """
    genai.configure(api_key=api_key)
    models = genai.list_models()
    model_names = [m.name for m in models]
    return model_names


if __name__ == "__main__":
    if not GEMINI_API:
        logging.error("‚ùå –ü–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–∫—Ä—É–∂–µ–Ω–∏—è GEMINI_API_KEY –Ω–µ –Ω–∞–π–¥–µ–Ω–∞.")
    else:
        models = list_gemini_models(GEMINI_API)
        logging.info("üì¶ –î–æ—Å—Ç—É–ø–Ω—ã–µ –º–æ–¥–µ–ª–∏ Gemini:")
        for name in models:
            print(f" - {name}")
