import logging
from dotenv import load_dotenv

load_dotenv()
logging.basicConfig(level=logging.INFO, format="%(asctime)s [%(levelname)s] %(message)s")

def search_documents(db, query: str, top_k: int = 3):
    """
    –í—ã–ø–æ–ª–Ω—è–µ—Ç —Å–µ–º–∞–Ω—Ç–∏—á–µ—Å–∫–∏–π –ø–æ–∏—Å–∫ –ø–æ –±–∞–∑–µ –≤–µ–∫—Ç–æ—Ä–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.

    :param db: –û–±—ä–µ–∫—Ç –≤–µ–∫—Ç–æ—Ä–Ω–æ–π –±–∞–∑—ã (–Ω–∞–ø—Ä–∏–º–µ—Ä, FAISS, Chroma)
    :param query: –ó–∞–ø—Ä–æ—Å –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—è
    :param top_k: –ö–æ–ª–∏—á–µ—Å—Ç–≤–æ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    :return: –°–ø–∏—Å–æ–∫ —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤
    """
    results = db.similarity_search(query, k=top_k)
    logging.info("üîç –ù–∞–π–¥–µ–Ω–æ %d —Ä–µ–ª–µ–≤–∞–Ω—Ç–Ω—ã—Ö –¥–æ–∫—É–º–µ–Ω—Ç–æ–≤.", len(results))
    return results


if __name__ == "__main__":
    # –ü—Ä–µ–¥–ø–æ–ª–∞–≥–∞–µ—Ç—Å—è, —á—Ç–æ db –∏–Ω–∏—Ü–∏–∞–ª–∏–∑–∏—Ä–æ–≤–∞–Ω —Ä–∞–Ω–µ–µ
    query = "–ß—Ç–æ —Ç–∞–∫–æ–µ RAG –º–æ–¥–µ–ª—å?"
    docs = search_documents(db, query)
    for i, doc in enumerate(docs, 1):
        print(f"\nüìÑ –î–æ–∫—É–º–µ–Ω—Ç {i}:\n{doc.page_content}")
